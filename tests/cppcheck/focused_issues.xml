<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.13.0"/>
    <errors>
        <error id="uninitMemberVarPrivate" severity="warning" msg="Member variable &apos;AIManager::m_lockFreeMessages&apos; is not initialized in the constructor." verbose="Member variable &apos;AIManager::m_lockFreeMessages&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/ai/behaviors/ChaseBehavior.cpp">
            <location file="include/managers/AIManager.hpp" line="283" column="5"/>
            <symbol>AIManager::m_lockFreeMessages</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;consecutiveEmptyPolls&apos; can be reduced." verbose="The scope of the variable &apos;consecutiveEmptyPolls&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/core/ForgeMain.cpp">
            <location file="include/core/ThreadSystem.hpp" line="572" column="16"/>
            <symbol>consecutiveEmptyPolls</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;isHighPriority&apos; can be reduced." verbose="The scope of the variable &apos;isHighPriority&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/core/ForgeMain.cpp">
            <location file="include/core/ThreadSystem.hpp" line="584" column="22"/>
            <symbol>isHighPriority</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;msg&apos; can be reduced." verbose="The scope of the variable &apos;msg&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/core/ForgeMain.cpp">
            <location file="include/core/ThreadSystem.hpp" line="829" column="29"/>
            <symbol>msg</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;msg&apos; can be reduced." verbose="The scope of the variable &apos;msg&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/core/ForgeMain.cpp">
            <location file="include/core/ThreadSystem.hpp" line="873" column="29"/>
            <symbol>msg</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;msg&apos; is assigned a value that is never used." verbose="Variable &apos;msg&apos; is assigned a value that is never used." cwe="563" file0="src/core/ForgeMain.cpp">
            <location file="include/core/ThreadSystem.hpp" line="829" column="33"/>
            <symbol>msg</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;msg&apos; is assigned a value that is never used." verbose="Variable &apos;msg&apos; is assigned a value that is never used." cwe="563" file0="src/core/ForgeMain.cpp">
            <location file="include/core/ThreadSystem.hpp" line="831" column="25"/>
            <symbol>msg</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;msg&apos; is assigned a value that is never used." verbose="Variable &apos;msg&apos; is assigned a value that is never used." cwe="563" file0="src/core/ForgeMain.cpp">
            <location file="include/core/ThreadSystem.hpp" line="873" column="33"/>
            <symbol>msg</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;msg&apos; is assigned a value that is never used." verbose="Variable &apos;msg&apos; is assigned a value that is never used." cwe="563" file0="src/core/ForgeMain.cpp">
            <location file="include/core/ThreadSystem.hpp" line="875" column="25"/>
            <symbol>msg</symbol>
        </error>
        <error id="arrayIndexOutOfBounds" severity="error" msg="Array &apos;m_bufferReady[2]&apos; accessed at index 2, which is out of bounds." verbose="Array &apos;m_bufferReady[2]&apos; accessed at index 2, which is out of bounds." cwe="788" file0="src/core/GameEngine.cpp">
            <location file="src/core/GameEngine.cpp" line="447" column="16" info="Array index out of bounds"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!mp_aiManager&apos; is always false" verbose="Condition &apos;!mp_aiManager&apos; is always false" cwe="570" file0="src/core/GameEngine.cpp">
            <location file="src/core/GameEngine.cpp" line="412" column="9" info="Condition &apos;!mp_aiManager&apos; is always false"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!mp_eventManager&apos; is always false" verbose="Condition &apos;!mp_eventManager&apos; is always false" cwe="570" file0="src/core/GameEngine.cpp">
            <location file="src/core/GameEngine.cpp" line="412" column="26" info="Condition &apos;!mp_eventManager&apos; is always false"/>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;threadSystem&apos; can be declared as reference to const" verbose="Variable &apos;threadSystem&apos; can be declared as reference to const" cwe="398" file0="src/core/GameLoop.cpp">
            <location file="src/core/GameLoop.cpp" line="62" column="23" info="Variable &apos;threadSystem&apos; can be declared as reference to const"/>
            <symbol>threadSystem</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;utilizationPercent&apos; is assigned a value that is never used." verbose="Variable &apos;utilizationPercent&apos; is assigned a value that is never used." cwe="563" file0="src/core/GameLoop.cpp">
            <location file="src/core/GameLoop.cpp" line="261" column="27"/>
            <symbol>utilizationPercent</symbol>
        </error>
        <error id="localtimeCalled" severity="portability" msg="Non reentrant function &apos;localtime&apos; called. For threadsafe applications it is recommended to use the reentrant replacement function &apos;localtime_r&apos;." verbose="Non reentrant function &apos;localtime&apos; called. For threadsafe applications it is recommended to use the reentrant replacement function &apos;localtime_r&apos;." cwe="477" file0="src/events/NPCSpawnEvent.cpp">
            <location file="src/events/NPCSpawnEvent.cpp" line="373" column="31"/>
        </error>
        <error id="localtimeCalled" severity="portability" msg="Non reentrant function &apos;localtime&apos; called. For threadsafe applications it is recommended to use the reentrant replacement function &apos;localtime_r&apos;." verbose="Non reentrant function &apos;localtime&apos; called. For threadsafe applications it is recommended to use the reentrant replacement function &apos;localtime_r&apos;." cwe="477" file0="src/events/WeatherEvent.cpp">
            <location file="src/events/WeatherEvent.cpp" line="19" column="37"/>
        </error>
        <error id="localtimeCalled" severity="portability" msg="Non reentrant function &apos;localtime&apos; called. For threadsafe applications it is recommended to use the reentrant replacement function &apos;localtime_r&apos;." verbose="Non reentrant function &apos;localtime&apos; called. For threadsafe applications it is recommended to use the reentrant replacement function &apos;localtime_r&apos;." cwe="477" file0="src/events/WeatherEvent.cpp">
            <location file="src/events/WeatherEvent.cpp" line="38" column="37"/>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;gameEngine&apos; can be declared as reference to const" verbose="Variable &apos;gameEngine&apos; can be declared as reference to const" cwe="398" file0="src/gameStates/EventDemoState.cpp">
            <location file="src/gameStates/EventDemoState.cpp" line="405" column="17" info="Variable &apos;gameEngine&apos; can be declared as reference to const"/>
            <symbol>gameEngine</symbol>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;gameEngine&apos; can be declared as reference to const" verbose="Variable &apos;gameEngine&apos; can be declared as reference to const" cwe="398" file0="src/gameStates/GamePlayState.cpp">
            <location file="src/gameStates/GamePlayState.cpp" line="108" column="19" info="Variable &apos;gameEngine&apos; can be declared as reference to const"/>
            <symbol>gameEngine</symbol>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;gameEngine&apos; can be declared as reference to const" verbose="Variable &apos;gameEngine&apos; can be declared as reference to const" cwe="398" file0="src/gameStates/LogoState.cpp">
            <location file="src/gameStates/LogoState.cpp" line="34" column="17" info="Variable &apos;gameEngine&apos; can be declared as reference to const"/>
            <symbol>gameEngine</symbol>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;inputManager&apos; can be declared as reference to const" verbose="Variable &apos;inputManager&apos; can be declared as reference to const" cwe="398" file0="src/gameStates/OverlayDemoState.cpp">
            <location file="src/gameStates/OverlayDemoState.cpp" line="294" column="11" info="Variable &apos;inputManager&apos; can be declared as reference to const"/>
            <symbol>inputManager</symbol>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;gameEngine&apos; can be declared as reference to const" verbose="Variable &apos;gameEngine&apos; can be declared as reference to const" cwe="398" file0="src/gameStates/PauseState.cpp">
            <location file="src/gameStates/PauseState.cpp" line="78" column="19" info="Variable &apos;gameEngine&apos; can be declared as reference to const"/>
            <symbol>gameEngine</symbol>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;ui&apos; can be declared as reference to const" verbose="Variable &apos;ui&apos; can be declared as reference to const" cwe="398" file0="src/gameStates/UIExampleState.cpp">
            <location file="src/gameStates/UIExampleState.cpp" line="161" column="11" info="Variable &apos;ui&apos; can be declared as reference to const"/>
            <symbol>ui</symbol>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;inputManager&apos; can be declared as reference to const" verbose="Variable &apos;inputManager&apos; can be declared as reference to const" cwe="398" file0="src/gameStates/UIExampleState.cpp">
            <location file="src/gameStates/UIExampleState.cpp" line="190" column="11" info="Variable &apos;inputManager&apos; can be declared as reference to const"/>
            <symbol>inputManager</symbol>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;threadSystem&apos; can be declared as reference to const" verbose="Variable &apos;threadSystem&apos; can be declared as reference to const" cwe="398" file0="src/managers/AIManager.cpp">
            <location file="src/managers/AIManager.cpp" line="49" column="19" info="Variable &apos;threadSystem&apos; can be declared as reference to const"/>
            <symbol>threadSystem</symbol>
        </error>
        <error id="clarifyCalculation" severity="style" msg="Clarify calculation precedence for &apos;&lt;&lt;&apos; and &apos;?&apos;." verbose="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&lt;&lt;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&lt;&lt;b)?c:d&apos;&apos; or &apos;&apos;a&lt;&lt;(b?c:d)&apos;&apos;." cwe="783" file0="src/managers/AIManager.cpp">
            <location file="src/managers/AIManager.cpp" line="562" column="5"/>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;container&apos; can be declared as reference to const" verbose="Variable &apos;container&apos; can be declared as reference to const" cwe="398" file0="src/managers/EventManager.cpp">
            <location file="src/managers/EventManager.cpp" line="400" column="15" info="Variable &apos;container&apos; can be declared as reference to const"/>
            <symbol>container</symbol>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;container&apos; can be declared as reference to const" verbose="Variable &apos;container&apos; can be declared as reference to const" cwe="398" file0="src/managers/EventManager.cpp">
            <location file="src/managers/EventManager.cpp" line="448" column="15" info="Variable &apos;container&apos; can be declared as reference to const"/>
            <symbol>container</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::copy_if algorithm instead of a raw loop." verbose="Consider using std::copy_if algorithm instead of a raw loop." cwe="398" file0="src/managers/EventManager.cpp">
            <location file="src/managers/EventManager.cpp" line="406" column="28"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::copy_if algorithm instead of a raw loop." verbose="Consider using std::copy_if algorithm instead of a raw loop." cwe="398" file0="src/managers/EventManager.cpp">
            <location file="src/managers/EventManager.cpp" line="457" column="28"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::copy_if algorithm instead of a raw loop." verbose="Consider using std::copy_if algorithm instead of a raw loop." cwe="398" file0="src/managers/EventManager.cpp">
            <location file="src/managers/EventManager.cpp" line="591" column="30"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::copy_if algorithm instead of a raw loop." verbose="Consider using std::copy_if algorithm instead of a raw loop." cwe="398" file0="src/managers/EventManager.cpp">
            <location file="src/managers/EventManager.cpp" line="628" column="30"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::copy_if algorithm instead of a raw loop." verbose="Consider using std::copy_if algorithm instead of a raw loop." cwe="398" file0="src/managers/EventManager.cpp">
            <location file="src/managers/EventManager.cpp" line="665" column="30"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fontsLoaded&apos; can be reduced." verbose="The scope of the variable &apos;fontsLoaded&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/managers/FontManager.cpp">
            <location file="src/managers/FontManager.cpp" line="72" column="26"/>
            <symbol>fontsLoaded</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;axisName&apos; is assigned a value that is never used." verbose="Variable &apos;axisName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="303" column="22"/>
            <symbol>axisName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;axisName&apos; is assigned a value that is never used." verbose="Variable &apos;axisName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="304" column="22"/>
            <symbol>axisName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;axisName&apos; is assigned a value that is never used." verbose="Variable &apos;axisName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="305" column="22"/>
            <symbol>axisName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;axisName&apos; is assigned a value that is never used." verbose="Variable &apos;axisName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="306" column="22"/>
            <symbol>axisName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;axisName&apos; is assigned a value that is never used." verbose="Variable &apos;axisName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="307" column="22"/>
            <symbol>axisName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;axisName&apos; is assigned a value that is never used." verbose="Variable &apos;axisName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="308" column="22"/>
            <symbol>axisName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;axisName&apos; is assigned a value that is never used." verbose="Variable &apos;axisName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="309" column="23"/>
            <symbol>axisName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;buttonName&apos; is assigned a value that is never used." verbose="Variable &apos;buttonName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="403" column="24"/>
            <symbol>buttonName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;buttonName&apos; is assigned a value that is never used." verbose="Variable &apos;buttonName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="404" column="24"/>
            <symbol>buttonName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;buttonName&apos; is assigned a value that is never used." verbose="Variable &apos;buttonName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="405" column="24"/>
            <symbol>buttonName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;buttonName&apos; is assigned a value that is never used." verbose="Variable &apos;buttonName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="406" column="24"/>
            <symbol>buttonName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;buttonName&apos; is assigned a value that is never used." verbose="Variable &apos;buttonName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="407" column="24"/>
            <symbol>buttonName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;buttonName&apos; is assigned a value that is never used." verbose="Variable &apos;buttonName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="408" column="24"/>
            <symbol>buttonName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;buttonName&apos; is assigned a value that is never used." verbose="Variable &apos;buttonName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="409" column="24"/>
            <symbol>buttonName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;buttonName&apos; is assigned a value that is never used." verbose="Variable &apos;buttonName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="410" column="24"/>
            <symbol>buttonName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;buttonName&apos; is assigned a value that is never used." verbose="Variable &apos;buttonName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="411" column="24"/>
            <symbol>buttonName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;buttonName&apos; is assigned a value that is never used." verbose="Variable &apos;buttonName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="412" column="24"/>
            <symbol>buttonName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;buttonName&apos; is assigned a value that is never used." verbose="Variable &apos;buttonName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="413" column="25"/>
            <symbol>buttonName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;buttonName&apos; is assigned a value that is never used." verbose="Variable &apos;buttonName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="414" column="25"/>
            <symbol>buttonName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;buttonName&apos; is assigned a value that is never used." verbose="Variable &apos;buttonName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="415" column="25"/>
            <symbol>buttonName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;buttonName&apos; is assigned a value that is never used." verbose="Variable &apos;buttonName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="416" column="25"/>
            <symbol>buttonName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;buttonName&apos; is assigned a value that is never used." verbose="Variable &apos;buttonName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="417" column="25"/>
            <symbol>buttonName</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;buttonName&apos; is assigned a value that is never used." verbose="Variable &apos;buttonName&apos; is assigned a value that is never used." cwe="563" file0="src/managers/InputManager.cpp">
            <location file="src/managers/InputManager.cpp" line="418" column="25"/>
            <symbol>buttonName</symbol>
        </error>
        <error id="localtimeCalled" severity="portability" msg="Non reentrant function &apos;localtime&apos; called. For threadsafe applications it is recommended to use the reentrant replacement function &apos;localtime_r&apos;." verbose="Non reentrant function &apos;localtime&apos; called. For threadsafe applications it is recommended to use the reentrant replacement function &apos;localtime_r&apos;." cwe="477" file0="src/managers/SaveGameManager.cpp">
            <location file="src/managers/SaveGameManager.cpp" line="479" column="40"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;soundsLoaded&apos; can be reduced." verbose="The scope of the variable &apos;soundsLoaded&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/managers/SoundManager.cpp">
            <location file="src/managers/SoundManager.cpp" line="76" column="26"/>
            <symbol>soundsLoaded</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;musicLoaded&apos; can be reduced." verbose="The scope of the variable &apos;musicLoaded&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/managers/SoundManager.cpp">
            <location file="src/managers/SoundManager.cpp" line="148" column="26"/>
            <symbol>musicLoaded</symbol>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;gameEngine&apos; can be declared as reference to const" verbose="Variable &apos;gameEngine&apos; can be declared as reference to const" cwe="398" file0="src/managers/UIManager.cpp">
            <location file="src/managers/UIManager.cpp" line="27" column="11" info="Variable &apos;gameEngine&apos; can be declared as reference to const"/>
            <symbol>gameEngine</symbol>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;gameEngine&apos; can be declared as reference to const" verbose="Variable &apos;gameEngine&apos; can be declared as reference to const" cwe="398" file0="src/managers/UIManager.cpp">
            <location file="src/managers/UIManager.cpp" line="820" column="19" info="Variable &apos;gameEngine&apos; can be declared as reference to const"/>
            <symbol>gameEngine</symbol>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;inputManager&apos; can be declared as reference to const" verbose="Variable &apos;inputManager&apos; can be declared as reference to const" cwe="398" file0="src/managers/UIManager.cpp">
            <location file="src/managers/UIManager.cpp" line="1513" column="11" info="Variable &apos;inputManager&apos; can be declared as reference to const"/>
            <symbol>inputManager</symbol>
        </error>
        <error id="constVariableReference" severity="style" msg="Variable &apos;gameEngine&apos; can be declared as reference to const" verbose="Variable &apos;gameEngine&apos; can be declared as reference to const" cwe="398" file0="src/managers/UIManager.cpp">
            <location file="src/managers/UIManager.cpp" line="2516" column="19" info="Variable &apos;gameEngine&apos; can be declared as reference to const"/>
            <symbol>gameEngine</symbol>
        </error>
    </errors>
</results>
