<?xml version="1.0"?>
<def format="2">
    <!-- SDL3 ForgeEngine Template Library Configuration -->
    <!-- This file defines custom functions and macros to reduce false positives in cppcheck -->

    <!-- Logging System Macros -->
    <define name="HAMMER_CRITICAL(system, msg)" value=""/>
    <define name="HAMMER_ERROR(system, msg)" value=""/>
    <define name="HAMMER_WARN(system, msg)" value=""/>
    <define name="HAMMER_INFO(system, msg)" value=""/>
    <define name="HAMMER_DEBUG(system, msg)" value=""/>

    <!-- Core System Logging -->
    <define name="GAMELOOP_CRITICAL(msg)" value=""/>
    <define name="GAMELOOP_ERROR(msg)" value=""/>
    <define name="GAMELOOP_WARN(msg)" value=""/>
    <define name="GAMELOOP_INFO(msg)" value=""/>
    <define name="GAMELOOP_DEBUG(msg)" value=""/>

    <define name="GAMEENGINE_CRITICAL(msg)" value=""/>
    <define name="GAMEENGINE_ERROR(msg)" value=""/>
    <define name="GAMEENGINE_WARN(msg)" value=""/>
    <define name="GAMEENGINE_INFO(msg)" value=""/>
    <define name="GAMEENGINE_DEBUG(msg)" value=""/>

    <define name="THREADSYSTEM_CRITICAL(msg)" value=""/>
    <define name="THREADSYSTEM_ERROR(msg)" value=""/>
    <define name="THREADSYSTEM_WARN(msg)" value=""/>
    <define name="THREADSYSTEM_INFO(msg)" value=""/>
    <define name="THREADSYSTEM_DEBUG(msg)" value=""/>

    <!-- Manager System Logging -->
    <define name="TEXTURE_CRITICAL(msg)" value=""/>
    <define name="TEXTURE_ERROR(msg)" value=""/>
    <define name="TEXTURE_WARN(msg)" value=""/>
    <define name="TEXTURE_INFO(msg)" value=""/>
    <define name="TEXTURE_DEBUG(msg)" value=""/>

    <define name="SOUND_CRITICAL(msg)" value=""/>
    <define name="SOUND_ERROR(msg)" value=""/>
    <define name="SOUND_WARN(msg)" value=""/>
    <define name="SOUND_INFO(msg)" value=""/>
    <define name="SOUND_DEBUG(msg)" value=""/>

    <define name="FONT_CRITICAL(msg)" value=""/>
    <define name="FONT_ERROR(msg)" value=""/>
    <define name="FONT_WARN(msg)" value=""/>
    <define name="FONT_INFO(msg)" value=""/>
    <define name="FONT_DEBUG(msg)" value=""/>

    <define name="AI_CRITICAL(msg)" value=""/>
    <define name="AI_ERROR(msg)" value=""/>
    <define name="AI_WARN(msg)" value=""/>
    <define name="AI_INFO(msg)" value=""/>
    <define name="AI_DEBUG(msg)" value=""/>
    <define name="AI_LOG(msg)" value=""/>

    <define name="EVENT_CRITICAL(msg)" value=""/>
    <define name="EVENT_ERROR(msg)" value=""/>
    <define name="EVENT_WARN(msg)" value=""/>
    <define name="EVENT_INFO(msg)" value=""/>
    <define name="EVENT_DEBUG(msg)" value=""/>

    <define name="INPUT_CRITICAL(msg)" value=""/>
    <define name="INPUT_ERROR(msg)" value=""/>
    <define name="INPUT_WARN(msg)" value=""/>
    <define name="INPUT_INFO(msg)" value=""/>
    <define name="INPUT_DEBUG(msg)" value=""/>

    <define name="UI_CRITICAL(msg)" value=""/>
    <define name="UI_ERROR(msg)" value=""/>
    <define name="UI_WARN(msg)" value=""/>
    <define name="UI_INFO(msg)" value=""/>
    <define name="UI_DEBUG(msg)" value=""/>

    <define name="SAVEGAME_CRITICAL(msg)" value=""/>
    <define name="SAVEGAME_ERROR(msg)" value=""/>
    <define name="SAVEGAME_WARN(msg)" value=""/>
    <define name="SAVEGAME_INFO(msg)" value=""/>
    <define name="SAVEGAME_DEBUG(msg)" value=""/>

    <define name="GAMESTATE_CRITICAL(msg)" value=""/>
    <define name="GAMESTATE_ERROR(msg)" value=""/>
    <define name="GAMESTATE_WARN(msg)" value=""/>
    <define name="GAMESTATE_INFO(msg)" value=""/>
    <define name="GAMESTATE_DEBUG(msg)" value=""/>

    <!-- Custom Engine Functions -->
    <function name="addLogEntry">
        <noreturn>false</noreturn>
        <returnValue type="void"/>
        <arg nr="1" direction="in">
            <not-uninit/>
        </arg>
    </function>

    <!-- Vector2D Class -->
    <function name="Vector2D">
        <returnValue type="Vector2D"/>
        <arg nr="1" direction="in" default="0.0f">
            <not-uninit/>
        </arg>
        <arg nr="2" direction="in" default="0.0f">
            <not-uninit/>
        </arg>
    </function>

    <!-- Manager Singleton Functions -->
    <function name="GameEngine::Instance">
        <returnValue type="GameEngine&amp;"/>
        <noreturn>false</noreturn>
    </function>

    <function name="AIManager::Instance">
        <returnValue type="AIManager&amp;"/>
        <noreturn>false</noreturn>
    </function>

    <function name="UIManager::Instance">
        <returnValue type="UIManager&amp;"/>
        <noreturn>false</noreturn>
    </function>

    <function name="FontManager::Instance">
        <returnValue type="FontManager&amp;"/>
        <noreturn>false</noreturn>
    </function>

    <function name="InputManager::Instance">
        <returnValue type="InputManager&amp;"/>
        <noreturn>false</noreturn>
    </function>

    <function name="SoundManager::Instance">
        <returnValue type="SoundManager&amp;"/>
        <noreturn>false</noreturn>
    </function>

    <function name="TextureManager::Instance">
        <returnValue type="TextureManager&amp;"/>
        <noreturn>false</noreturn>
    </function>

    <function name="EventManager::Instance">
        <returnValue type="EventManager&amp;"/>
        <noreturn>false</noreturn>
    </function>

    <!-- Threading System -->
    <function name="Hammer::ThreadSystem::Instance">
        <returnValue type="ThreadSystem&amp;"/>
        <noreturn>false</noreturn>
    </function>

    <!-- Common Manager Functions -->
    <function name="getPlayerReference">
        <returnValue type="auto"/>
        <noreturn>false</noreturn>
    </function>

    <function name="isPlayerValid">
        <returnValue type="bool"/>
        <noreturn>false</noreturn>
    </function>

    <function name="getGameStateManager">
        <returnValue type="auto"/>
        <noreturn>false</noreturn>
    </function>

    <function name="setState">
        <returnValue type="void"/>
        <arg nr="1" direction="in">
            <not-uninit/>
        </arg>
    </function>

    <function name="registerBehavior">
        <returnValue type="void"/>
        <arg nr="1" direction="in">
            <not-uninit/>
        </arg>
    </function>

    <function name="hasBehavior">
        <returnValue type="bool"/>
        <arg nr="1" direction="in">
            <not-uninit/>
        </arg>
    </function>

    <!-- Input Functions -->
    <function name="wasKeyPressed">
        <returnValue type="bool"/>
        <arg nr="1" direction="in">
            <not-uninit/>
        </arg>
    </function>

    <function name="isKeyDown">
        <returnValue type="bool"/>
        <arg nr="1" direction="in">
            <not-uninit/>
        </arg>
    </function>

    <!-- UI Functions -->
    <function name="createLabel">
        <returnValue type="auto"/>
        <arg nr="1" direction="in">
            <not-uninit/>
        </arg>
    </function>

    <function name="enableTextBackground">
        <returnValue type="void"/>
        <arg nr="1" direction="in">
            <not-uninit/>
        </arg>
    </function>

    <function name="drawRect">
        <returnValue type="void"/>
        <arg nr="1" direction="in">
            <not-uninit/>
        </arg>
    </function>

    <function name="drawBorder">
        <returnValue type="void"/>
        <arg nr="1" direction="in">
            <not-uninit/>
        </arg>
    </function>

    <function name="getComponent">
        <returnValue type="auto"/>
        <arg nr="1" direction="in">
            <not-uninit/>
        </arg>
    </function>

    <!-- AI Behavior Functions -->
    <function name="checkLineOfSight">
        <returnValue type="bool"/>
        <arg nr="1" direction="in">
            <not-uninit/>
        </arg>
        <arg nr="2" direction="in">
            <not-uninit/>
        </arg>
    </function>

    <function name="onTargetReached">
        <returnValue type="void"/>
    </function>

    <function name="onTargetLost">
        <returnValue type="void"/>
    </function>

    <function name="handleNoLineOfSight">
        <returnValue type="void"/>
    </function>

    <function name="setActive">
        <returnValue type="void"/>
        <arg nr="1" direction="in">
            <not-uninit/>
        </arg>
    </function>

    <function name="init">
        <returnValue type="void"/>
    </function>

    <!-- Utility Functions -->
    <function name="getCurrentTimeNanos">
        <returnValue type="uint64_t"/>
        <noreturn>false</noreturn>
    </function>

    <!-- Standard Library Extensions -->
    <function name="std::filesystem::exists">
        <returnValue type="bool"/>
        <arg nr="1" direction="in">
            <not-uninit/>
        </arg>
    </function>

    <function name="std::exception::what">
        <returnValue type="const char*"/>
        <noreturn>false</noreturn>
    </function>

    <!-- SDL3 Functions that might not be in cppcheck's SDL library -->
    <function name="SDL_GetError">
        <returnValue type="const char*"/>
        <noreturn>false</noreturn>
    </function>
</def>
